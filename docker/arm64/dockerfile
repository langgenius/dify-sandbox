# Build stage
FROM golang:1.23-bookworm AS builder

# if you located in China, you can use aliyun mirror to speed up
# RUN sed -i 's@deb.debian.org@mirrors.aliyun.com@g' /etc/apt/sources.list.d/debian.sources

# Install build dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    pkg-config \
    gcc \
    libseccomp-dev \
    && rm -rf /var/lib/apt/lists/*

# Copy source code
COPY . /workspace
WORKDIR /workspace

# using goproxy if you have network issues
# ENV GOPROXY=https://goproxy.cn,direct

# Build binaries
RUN chmod +x build/build_arm64.sh \
    && go mod tidy \
    && ./build/build_arm64.sh

# Runtime stage
FROM python:3.12-slim-bookworm

# if you located in China, you can use aliyun mirror to speed up
# RUN sed -i 's@deb.debian.org@mirrors.aliyun.com@g' /etc/apt/sources.list.d/debian.sources

RUN apt-get update \
    && apt-get install -y --no-install-recommends \
       wget \
       curl \
       xz-utils \
       zlib1g \
       expat \
       perl \
       libsqlite3-0 \
       libseccomp2 \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# copy built binaries from builder stage
COPY --from=builder /workspace/main /main
COPY --from=builder /workspace/env /env

# copy config file
COPY conf/config.yaml /conf/config.yaml
# copy python dependencies
COPY dependencies/python-requirements.txt /dependencies/python-requirements.txt

# if you located in China, you can use tsinghua mirror to speed up pip install
# RUN pip3 config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple 

RUN chmod +x /main /env \
    && pip3 install --no-cache-dir httpx==0.27.2 requests==2.32.3 jinja2==3.0.3 PySocks httpx[socks] \
    && wget -O /opt/node-v20.11.1-linux-arm64.tar.xz https://npmmirror.com/mirrors/node/v20.11.1/node-v20.11.1-linux-arm64.tar.xz \
    && tar -xvf /opt/node-v20.11.1-linux-arm64.tar.xz -C /opt \
    && ln -s /opt/node-v20.11.1-linux-arm64/bin/node /usr/local/bin/node \
    && rm -f /opt/node-v20.11.1-linux-arm64.tar.xz \
    && /env 

ENTRYPOINT ["/main"]
